const socket=io({secure:!0}),client=feathers().configure(feathers.hooks()).configure(feathers.socketio(socket)).configure(feathers.authentication({cookie:"feathers-jwt"}));toastr.options.closeDuration=12e3,toastr.options.positionClass="toast-bottom-right";const users=client.service("/users");var currentPage=0,itemsPerPage=15,pagesLoaded=[],allTickets=[];function logout(){client.logout(),window.location.href="/login.html"}function updateTicketList(page,tokenQuery){if(console.log("updating ticket list for page "+page),$("#load-more-btn").hide(),pagesLoaded.includes(page))return console.log("page already loaded"),void(currentPage-=1);pagesLoaded.push(page);var q={};q=0===tokenQuery.length?{query:{$limit:itemsPerPage,$skip:page*itemsPerPage,$sort:{createdAt:-1}}}:{query:{$limit:itemsPerPage,$skip:page*itemsPerPage,$sort:{createdAt:-1},$or:tokenQuery}},client.service("/tokens").find(q).then(tickets=>{tickets.data.length<itemsPerPage&&(currentPage-=1);var row=1+page*itemsPerPage,stable=$("#ticket-list")[0];tickets.data.map(ticket=>{var r=stable.insertRow(row);ticket.isClosed?ticket.noShow?ticket.curStatus="No-Show":ticket.cancelledByTA?ticket.curStatus="Canceled (TA)":ticket.curStatus="Closed":ticket.fulfilled?ticket.cancelledByStudent?ticket.curStatus="Canceled":ticket.curStatus="In Progress":ticket.curStatus="Queued",r.insertCell(0).innerHTML=row,r.insertCell(1).innerHTML=ticket.curStatus,r.insertCell(2).innerHTML=ticket.user.name||ticket.user.directoryID,r.insertCell(3).innerHTML=new Date(ticket.createdAt).toLocaleString(),r.insertCell(4).innerHTML=ticket.fulfilledByName?ticket.fulfilledByName:"",r.insertCell(5).innerHTML=ticket.desc||"No description",$(r).css("cursor","pointer"),$(r).attr("data-toggle","modal"),$(r).attr("data-target","#ticket-modal");const pos=row;$(r).click(function(){$("#ticket-modal-label").text("#"+pos+": "+(ticket.user.name||ticket.user.directoryID)+" on "+new Date(ticket.createdAt).toLocaleString()),setModal(ticket)}),row++}),allTickets=allTickets.concat(tickets),$("#all-tickets-label").html("All tickets ("+tickets.total+")"),$("#load-more-btn").show()})}function setModal(ticket){var finalHTML="";finalHTML+='<h4>Ticket status: <span style="color:gray">'+ticket.curStatus+"</span></h4>",finalHTML+='<p> Description: </p> <div class="well">'+(ticket.desc||"No description")+"</div>",!ticket.fulfilled||ticket.cancelledByStudent||ticket.noShow?ticket.cancelledByStudent?finalHTML+="<hr><h4> This ticket was canceled by the student</h4>":ticket.noShow&&(finalHTML+="<h4> Student was not present</h4>",finalHTML+='<hr><h5 style="display:inline-block;">Responding TA:</h5> '+ticket.fulfilledByName+"<br>"):(finalHTML+='<hr><h5 style="display:inline-block;">Responding TA:</h5> '+ticket.fulfilledByName+"<br>",ticket.isClosed&&(finalHTML+='<h5 style="display:inline-block;">Ticket closed on:</h5> '+new Date(ticket.closedAt).toLocaleString()+"<br>",ticket.comment?(finalHTML+='<h5 style="display:inline-block;">Student was knowledgeable:</h5> '+ticket.comment.knowledgeable+"<br>",finalHTML+='<h5 style="display:inline-block;">Student could have solved problem with less help:</h5> '+ticket.comment.toldTooMuch+"<br>",finalHTML+='<br><p>TA Notes:</p><div class="well">'+(ticket.comment.text?ticket.comment.text:"No notes")+"</div>"):finalHTML+="<br><h5>Comments not available</h5>")),$("#ticket-modal-body").html(finalHTML)}client.authenticate().then(response=>(console.info("authenticated successfully"),client.set("jwt",response.accessToken),client.passport.verifyJWT(response.accessToken))).then(payload=>(console.info("verified JWT"),users.get(payload.userId))).then(user=>{console.log("user",user),"Instructor"!==user.role&&"TA"!==user.role?window.location.href="/":"Instructor"===user.role&&$('<li><a href="/instructor.html">Instructor Home</a></li>').insertBefore("ul.nav>li:first"),client.set("user",user),updateTicketList(currentPage,[]),socket.on("passcode updated",function(){toastr.success("Passcode updated.",{timeout:3e5})}),socket.on("tokens created",function(token){toastr.success("New ticket created")}),socket.on("tokens patched",function(){toastr.success("Ticket status updated")})}).catch(error=>{console.log("auth error or not authenticated, redirecting...",error),window.location.href="/login.html"});const tokens=client.service("/tokens");let tokenQuery=[],timeOutID=null;function searchTokens(){null!==timeOutID&&clearTimeout(timeOutID),timeOutID=setTimeout(()=>{var filter;filter=document.getElementById("searchBox").value.toUpperCase(),document.getElementById("ticket-list").getElementsByTagName("tr"),tokenQuery=""===filter?[]:[{userName:{$search:filter}},{desc:{$search:filter}},{fulfilledByName:{$search:filter}}],currentPage=0,pagesLoaded=[],$("#ticket-list").hide(),$("#ticket-list").find("tr:gt(0)").remove(),updateTicketList(currentPage,tokenQuery),$("#ticket-list").show()},100)}function loadmore(){updateTicketList(currentPage+=1,tokenQuery)}$(document).ready(function(){$(window).scroll(function(){$(window).scrollTop()+$(window).height()==$(document).height()&&(currentPage+=1,setTimeout(function(){updateTicketList(currentPage,tokenQuery)},200))})});
//# sourceMappingURL=tickets.js.map
